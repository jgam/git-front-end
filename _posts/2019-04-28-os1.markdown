---
title: "OS"
layout: post
date: 2019-04-28
image: /assets/images/markdown.jpg
headerImage: false
tag:
- jgam
- Operating System
- System Call
- golden week coding
- OS
category: blog
author: jgam
description: operating system
---

## Operating System

Before we go into Operating System, I want to share the goodness of Japanese holidays and during which< I am able to do lots of OS studyings. SO, thank you Japan for this wonderful 10 days of break! Also, my first project during golden week is to understand os in my words and again IN MY WORDS. So the definiction could be slightly different and if it is, please let me know so I can fix my thoughts! Let's begin!

## Computer System Organization

For a compjuter to start running, when it is powered up or rebootted, it needs to have an initial program to run. This initial program, **bootstrap program** initializes all aspects of the system, from CPU registers to device controllers to memory contents. The bootstrap progra must know how to load the operating system and how to start executing that system. After it has been initiated, the system is waiting for *event* to occur and this event is called interrupt and it can occur via system calls ortother special oeprations.

Computers usually run their programs from rewriteable memory called main memory (Random Access memory, or RAM). Main memory is implemented in a semiconductor technology called dynamic random access memory (DRAM). Because main memory is too small to store all needed programs and data and also it being volatile, (contents removed when power is turned off) secondary storage is needed and in here, computers save all the programs and data to ensure that the information is kept.

### Single Processor System VS Multiprocessor Systems

Multiprocessors have three main advantages:
1. Increased throughput : expect to get more work done in less time
2. Economy of Scale: Multiprocessor Systems can cost less than equivalent multiple single-processor systems, because they share *peripherals, mass storage, and power supplies.*
3. Increaesd reliability: adding safety to reliability. Failing one won't cause much damage because the other is alive.

Therefore, we now use multiple processor systems which provide those advantages.

## Kernel Data Structures

What is the way data are structured in the system? Fundamental data structures used extensively in oeprating systems.

1.10.1 Lists, Stacks, and Queues

An array is a simple data structure in which each element can bea ccessed directly. For example, main memory is constructed as an array. If the data item being stored is larger than one byte, then multiple bytes can be allocated to the item, and the item is addressed as item number x item size.

List represents a collectino of data values as a sequence.

### Linked List

In linked list, itmes are linked to one another and has several types:
1. singly linked list: each item points to its successor
2. doubly linked list: given item can refer either to its predecessor or to its successor
3. circularly linked list: the last element in the list refers to the first element

Stack is sequentially ordered data structure that has **LIFO**.
Queue is sequentially ordered data structure that has **FIFO**.

###Trees

A tree is a data structure that can be used to represent data hierarchically. Data values in a tree structure are linked through parent-child relationships. In a general tree, a parent may have an unlimited number of children.

1. binary tree: a parent may have at most two children, which wet erm the left and right child
2. binary search tree requires an ordering between the parent's two chidlren in which leftc hile <= right child.
3. balanced binary search tree is a tree containing n items that have at most log n levels, thus ensuring worst case perforamnce of O(logN).

### Hash Functions and Maps

Hash functino is to use key and values(indexing) to maixmize the performance efficiency. One potential difficulty with hash functions is thatt wo inputs can result in the same output value, that is they can link to the same table location. We can solve this hash collosion by having a linked list at that index or list. Similar to this data structure, we use mapping.

### Bitmaps

A **bitmap** is a string of n binary digits that can be used to represent the status of n items. This might be a little uncommon term but what this datastructure does is simple. For example, we have 8 resources and 0 means the resource is available whereas 1 means the resource is taken. 0 0 1 0 1 1 1 0 means that there are four untaken resources that we can use. This we can use it in **disk blocks** and is good for space complexity.

## Cloud Computing

Clou computing is a typ of computing that delivers computing, storage, and even applications as a service across a network. In some ways, it is a logical extension of virtualization, because it uses virtualization as a base for its functionality.
1. public cloud : a cloud available via the Internet to anyone willing to pay for the services
2. private cloud : a cloud run by a company for that company's own use
3. hybrid cloud : a cloud that includes both pblic and private cloud components
4. SaaS(software as a service) : one or more applications(such as word processors or spreadshees) available via the Internet
5. Platorm as a service (PaaS) : a software stack ready for applicatino use via the Internet(database server)
6. Infrastructure as a service (IaaS) : servers or storage available over the Internet (for example, storage available for making backup copies of production data)

The cloud-computing typs are not discrete, as a cloud computing environment may provide a combination of several types. Certainly, there are traditinal operating systems within many of the types of cloud infrastructure.
