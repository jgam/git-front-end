---
title: "Learning Frontend"
layout: post
date: 2019-03-22
image: /assets/images/markdown.jpg
headerImage: false
tag:
- jgam
- javscript
- webdevelopment
- frontend
- basics
category: blog
author: jgam
description: Frontend
---

개발자로 일하다면 한번쯤은 무조건 들어봤을만한 frontend frameworks로는 angular, react, vue 등이 있다. 그러면 이 3가지를 전부 다 알아야 정말 차별화된 프론트 개발자일까? 대학교에서 operating system (필자는 굉장히 힘들어함) 라는 수업을 왜들었을까? 가령 예를들면, PCB라는 개념을 이해하는게 내가 associate software engineer로 일하는데 도움이 될까? 대답은 NO 이다. 그럼에도 나는 지금에서야 Operating system의 중용성을 깨닫는다. 가장 기초적에서 부터 원리를 이해해야 그 다음것이 동작하는것에 대한 이해가 수월하다. 코딩언어란 그런거 같다. C, python, java 등의 언어들은 컴퓨터를 기반으로 하고있고 결국 가장 low level인 os에 대한 이해도는 각 언어를 배울때 아주 큰 도움이 된다. (필자는 그래서 굉장히 애쓰고있는중...)

다시 본래로 돌아가서, 프론트엔드를 공부하다보면 공통적인 개념 3가지가 나오는데 그 부분에 대해서 정리해보자한다.

1. Component
    component란 set of web platform API인데, 새로운 html 태그를 웹 페이지나 웹 앱에서 만들어 줄 수 있다. 웹 컴포넌트를 좀더 자세하게 정의 하면 다음 4가지로도 정의가 된다.
###웹 컴포넌트
1. custom elements
2. shadow DOM
3. HTML Imports
4. HTML Templates
 
custom elements는 용어 그래도 새로운 HTML tag를 만들수 있게 해준다.
```javascript
<drop-down></drop-down>
```
물론 네이밍 룰이 있으나, 굳이 설명안해도 찾아보면서 고칠 수 있을 것이다.

shadow DOM은 markup 과 custom element들을 숨길때 용이하다. 예제는 이렇다.

```javascript
window.customElements.define('test-shadow', class extends HTMLElement {
  constructor() {
    super();
    var shadowRoot = this.attachShadow({mode: 'open'});
    shadowRoot.innerHTML = `<strong>Shadow encapsulation!</strong>`;
  }
})
```
위 코드를 브라우저에 실행시킨다면 이런식으로 render될것이다.

```javascript
<test-shadow>
    <strong>Shadow encapsulation!</strong>
</test-shadow>
```

HTML Imports는 html documents들을 하나로 묶을 수 있다. 예제를 보면 편할것이다.
```javascript
<link rel="import" href="drop-down.html">

<drop-down>
    now available
</drop-down>
```
보다싶이, html파일을 link태그에서 가져오는 것이 용이하다.

HTML Template element는 markup을 페이지로드에 선언할때 사용된다. 다른 말로 하자면 template tag가 markup 자체를 페이지에 저장하고, 이것을 유저들은 나중에 다시 재사용 할수있다. <template> 태그를 쓰면 쉽게 접근 할 수 있다.

컴포넌트의 이해를 돕기위해 [예제](https://github.com/jgam/javascript_web/components/)를 추가했다!
2. Routing
3. Managing Site