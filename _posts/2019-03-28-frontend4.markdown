---
title: "Learning Frontend: A little detail on Javascript"
layout: post
date: 2019-03-28
image: /assets/images/markdown.jpg
headerImage: false
tag:
- jgam
- javascript
- webdevelopment
- php
- webapp
category: blog
author: jgam
description: web app
---

## A little dtail on Javascript

Let us start with a simple HTML code and see one of the most important concepts of javascript that it is  **Event Driven** language.

```javascript
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
</head>
<body>
  <input type="button" value="white" onclick="alert('Hello World')"/>
  <input type="text" onfocus="alert('focus')" onblur="alert('blur')"/>
</body>
</html>

```

The following command will be shown on the broswer as this:

<div class="side-by-side">
    <div class="tocenter">
        <img class="image" src="{{ site.url }}/{{ site.frontend1}}" alt="Alt Text">
        <figcaption class="caption">Photo by jgam CREDIT: jgam</figcaption>
    </div>
</div>

What happends when you click the white button? Yes, as you can see it in the code of onclick action, you will see alert API of Hello World. Similar to onclick, there exist several actions which are onfocus and onblur. These actions also advocate how Javascript is a event-driven language.

Great Let's move a little forward.

```javascript
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
</head>
<body>
  <input type="text" id="user_input"/>
  <input type="button" value="white" onclick="alert(document.getElementById('user_input').value)"/>
</body>
</html>
```

As you can see here, we have a text box and its id is "user_input". The next line, onclick event directs to an alert of the value we inserted on previous text box. The way we did that is document.getElementById('user_input').value

I used .value because what we took out in document.getElementById is an object and in that object, I wanted to extract value which is the actual input of the textbox. Here is another example!

```javascript
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <style>
    ul li{
      font-size:40px;
    }
    .em{
      text-decoration:underline;
    }
  </style>
</head>
<body>
  <ol id="target">
    <li class="em">html</li>
    <li>css</li>
    <li>javascript</li>
  </ol>

  <ul>
    <li>maoto</li>
    <li class="em">jimmy</li>
    <li>donata</li>
    <li>hiro</li>
  </ul>
  <input type="button" value="emphasis" onclick="document.getElementById('target').className='em'"/>
</body>
</html>
```

This snippet of the code looks pretty awful but when we go through it carefully, it is actually not. The style part is a basic css where we want to make element of unordered list to have font size to be 40 pixel and .em class to be underlined. In your body, we have two lists: ordered and unordered. Lastly, we have a input type button that gets element ID of target and sets its class name to em. You can see whatis going on here. class Name 'em' is supposed to be underlined since we mentioned that in style tag. So, we can assume that when we click the button called "emphasis", the tag with id of 'target' becomes underlined. if it is an element, just that element but if it is a list, then the whole list becomes underlined.

